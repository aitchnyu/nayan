#!/bin/bash

if [[ -z $(which docker-compose) ]]
then
  echo "You don't have docker-compose installed. Exiting"
  exit 1
fi

docker-compose up -d

# Functions format is from https://github.com/adriancooney/Taskfile

function init() {
  echo "Running idempotent init script"
  docker-compose exec db psql -U postgres -c "create database db;"
  docker-compose exec webdev python3 -m venv /code/venv
  docker-compose exec webdev /code/venv/bin/python3 -m pip install -r /code/backend/requirements.txt
  docker-compose exec webdev /code/venv/bin/python3 /code/backend/manage.py migrate
  # todo break this out into own npm command?
  docker-compose exec jsdev npm install
}

function clean() {
  # Since docker is run as root, its generated files are root owned
  docker-compose exec webdev rm -rf /code/venv && \
    rm -rf /code/pgdata && \
    rm -rf /code/vueapp/node_modules && \
    rm -rf /code/backend/static && \
    rm -rf /code/htmlcov && \
    rm /code/.coverage && \
    rm -rf /code/vueapp/coverage && \
    rm /code/backend/app/static/app/webpack-dist
}

function django-manage() {
  docker-compose exec webdev /code/venv/bin/python3 /code/backend/manage.py "$@"
}

function django-manage-runserver() {
  django-manage runserver 0.0.0.0:8000
}

function django-test() {
  django-manage test app
}

function django-test-coverage() {
  docker-compose exec webdev /code/venv/bin/coverage run /code/backend/manage.py test app
  docker-compose exec webdev /code/venv/bin/coverage report
  docker-compose exec webdev /code/venv/bin/coverage html
  read -e -p "Open coverage report in browser? [Y/n] " YN
  [[ $YN == "y" || $YN == "Y" || $YN == "" ]] && open htmlcov/index.html
}


function pip() {
 docker-compose exec webdev /code/venv/bin/pip3 "$@"
}

function black() {
 docker-compose exec webdev /code/venv/bin/black backend
}

function npm() {
 docker-compose exec jsdev npm "$@"
}

function vue-cli() {
  docker-compose exec jsdev ./node_modules/.bin/vue-cli-service "$@"
}

function vue-watch() {
  vue-cli build --watch
}

function vue-test() {
  vue-cli test:unit
}

function vue-test-coverage() {
  vue-cli test:unit --coverage
  read -e -p "Open coverage report in browser? [Y/n] " YN
  [[ $YN == "y" || $YN == "Y" || $YN == "" ]] && open vueapp/coverage/lcov-report/index.html
}


function vue-build() {
  vue-cli build
}

function vue-lint() {
  vue-cli lint --fix
}

function help() {
  echo "$0 <task> <args>"
  echo "Tasks:"
  compgen -A function | cat -n
}

# This command executes help function by default
"${@:-help}"
